function movievalue = importCsv()


    %% Import data from text file.
    % Script for importing data from the following text file:
    %
    %    X:\My Documents\MATLAB\DataScience\Assignment1\movievalue.csv
    %
    % To extend the code to different selected data or a different text file,
    % generate a function instead of a script.

    % Auto-generated by MATLAB on 2016/11/18 16:24:11

    %% Initialize variables.
    filename = 'X:\My Documents\MATLAB\DataScience\Assignment1\movievalue.csv';
    delimiter = ';';

    %% Read columns of data as strings:
    % For more information, see the TEXTSCAN documentation.
    formatSpec = '%q%q%q%q%q%q%[^\n\r]';

    %% Open the text file.
    fileID = fopen(filename,'r');

    %% Read columns of data according to format string.
    % This call is based on the structure of the file used to generate this
    % code. If an error occurs for a different file, try regenerating the code
    % from the Import Tool.
    dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter,  'ReturnOnError', false);

    %% Close the text file.
    fclose(fileID);

    %% Convert the contents of columns containing numeric strings to numbers.
    % Replace non-numeric strings with NaN.
    raw = repmat({''},length(dataArray{1}),length(dataArray)-1);
    for col=1:length(dataArray)-1
        raw(1:length(dataArray{col}),col) = dataArray{col};
    end
    numericData = NaN(size(dataArray{1},1),size(dataArray,2));

    for col=[1,4,5,6]
        % Converts strings in the input cell array to numbers. Replaced non-numeric
        % strings with NaN.
        rawData = dataArray{col};
        for row=1:size(rawData, 1);
            % Create a regular expression to detect and remove non-numeric prefixes and
            % suffixes.
            regexstr = '(?<prefix>.*?)(?<numbers>([-]*(\d+[\,]*)+[\.]{0,1}\d*[eEdD]{0,1}[-+]*\d*[i]{0,1})|([-]*(\d+[\,]*)*[\.]{1,1}\d+[eEdD]{0,1}[-+]*\d*[i]{0,1}))(?<suffix>.*)';
            try
                result = regexp(rawData{row}, regexstr, 'names');
                numbers = result.numbers;

                % Detected commas in non-thousand locations.
                invalidThousandsSeparator = false;
                if any(numbers==',');
                    thousandsRegExp = '^\d+?(\,\d{3})*\.{0,1}\d*$';
                    if isempty(regexp(numbers, thousandsRegExp, 'once'));
                        numbers = NaN;
                        invalidThousandsSeparator = true;
                    end
                end
                % Convert numeric strings to numbers.
                if ~invalidThousandsSeparator;
                    numbers = textscan(strrep(numbers, ',', ''), '%f');
                    numericData(row, col) = numbers{1};
                    raw{row, col} = numbers{1};
                end
            catch me
            end
        end
    end

    % Convert the contents of columns with dates to MATLAB datetimes using date
    % format string.
    try
        dates{2} = datetime(dataArray{2}, 'Format', 'MM/dd/yyyy', 'InputFormat', 'MM/dd/yyyy');
    catch
        try
            % Handle dates surrounded by quotes
            dataArray{2} = cellfun(@(x) x(2:end-1), dataArray{2}, 'UniformOutput', false);
            dates{2} = datetime(dataArray{2}, 'Format', 'MM/dd/yyyy', 'InputFormat', 'MM/dd/yyyy');
        catch
            dates{2} = repmat(datetime([NaN NaN NaN]), size(dataArray{2}));
        end
    end

    anyBlankDates = cellfun(@isempty, dataArray{2});
    anyInvalidDates = isnan(dates{2}.Hour) - anyBlankDates;
    dates = dates(:,2);

    %% Split data into numeric and cell columns.
    rawNumericColumns = raw(:, [1,4,5,6]);
    rawCellColumns = raw(:, 3);


    %% Replace non-numeric cells with NaN
    R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),rawNumericColumns); % Find non-numeric cells
    rawNumericColumns(R) = {NaN}; % Replace non-numeric cells

    %% Create output variable
    movievalue = table;
    movievalue.Rank = cell2mat(rawNumericColumns(:, 1));
    movievalue.ReleaseDate = dates{:, 1};
    movievalue.Movie = rawCellColumns(:, 1);
    movievalue.ProductionBudget = cell2mat(rawNumericColumns(:, 2));
    movievalue.DomesticGross = cell2mat(rawNumericColumns(:, 3));
    movievalue.WorldwideGross = cell2mat(rawNumericColumns(:, 4));
    
    movievalue([1],:) = [];
    
end